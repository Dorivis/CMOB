# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import service_pb2 as service__pb2


class grpcServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getMemoriesAndCodelets = channel.unary_unary(
                '/grpcService/getMemoriesAndCodelets',
                request_serializer=service__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.APIResponse.FromString,
                )
        self.getMemories = channel.unary_unary(
                '/grpcService/getMemories',
                request_serializer=service__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.memoriesResponse.FromString,
                )
        self.getCodelets = channel.unary_unary(
                '/grpcService/getCodelets',
                request_serializer=service__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.codeletsResponse.FromString,
                )
        self.getInfo = channel.unary_unary(
                '/grpcService/getInfo',
                request_serializer=service__pb2.indexInfo.SerializeToString,
                response_deserializer=service__pb2.responseInfo.FromString,
                )
        self.setInfo = channel.unary_unary(
                '/grpcService/setInfo',
                request_serializer=service__pb2.infoAdd.SerializeToString,
                response_deserializer=service__pb2.responseOK.FromString,
                )
        self.sendCodelet = channel.stream_stream(
                '/grpcService/sendCodelet',
                request_serializer=service__pb2.codeletsResponse.SerializeToString,
                response_deserializer=service__pb2.codeletsResponse.FromString,
                )


class grpcServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getMemoriesAndCodelets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMemories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCodelets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendCodelet(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_grpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getMemoriesAndCodelets': grpc.unary_unary_rpc_method_handler(
                    servicer.getMemoriesAndCodelets,
                    request_deserializer=service__pb2.Empty.FromString,
                    response_serializer=service__pb2.APIResponse.SerializeToString,
            ),
            'getMemories': grpc.unary_unary_rpc_method_handler(
                    servicer.getMemories,
                    request_deserializer=service__pb2.Empty.FromString,
                    response_serializer=service__pb2.memoriesResponse.SerializeToString,
            ),
            'getCodelets': grpc.unary_unary_rpc_method_handler(
                    servicer.getCodelets,
                    request_deserializer=service__pb2.Empty.FromString,
                    response_serializer=service__pb2.codeletsResponse.SerializeToString,
            ),
            'getInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getInfo,
                    request_deserializer=service__pb2.indexInfo.FromString,
                    response_serializer=service__pb2.responseInfo.SerializeToString,
            ),
            'setInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.setInfo,
                    request_deserializer=service__pb2.infoAdd.FromString,
                    response_serializer=service__pb2.responseOK.SerializeToString,
            ),
            'sendCodelet': grpc.stream_stream_rpc_method_handler(
                    servicer.sendCodelet,
                    request_deserializer=service__pb2.codeletsResponse.FromString,
                    response_serializer=service__pb2.codeletsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class grpcService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getMemoriesAndCodelets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcService/getMemoriesAndCodelets',
            service__pb2.Empty.SerializeToString,
            service__pb2.APIResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getMemories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcService/getMemories',
            service__pb2.Empty.SerializeToString,
            service__pb2.memoriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getCodelets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcService/getCodelets',
            service__pb2.Empty.SerializeToString,
            service__pb2.codeletsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcService/getInfo',
            service__pb2.indexInfo.SerializeToString,
            service__pb2.responseInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcService/setInfo',
            service__pb2.infoAdd.SerializeToString,
            service__pb2.responseOK.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendCodelet(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/grpcService/sendCodelet',
            service__pb2.codeletsResponse.SerializeToString,
            service__pb2.codeletsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
